<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Examiner Page</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
            integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
            crossorigin="anonymous"
        />
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
            integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
            crossorigin="anonymous"
        ></script>
        <style>
            .row.content {
                height: 500px;
            }
            footer {
                background-color: #555;
                color: white;
                padding: 15px;
            }
            .expandable-row .toggle-arrow {
                cursor: pointer;
            }
        </style>
        <script>
            document.addEventListener("DOMContentLoaded", () => {
                const testTypeFilter =
                    document.getElementById("testTypeFilter");

                testTypeFilter.addEventListener("change", () => {
                    const selectedTestType = testTypeFilter.value;
                    filterAndSetData(selectedTestType);
                });

                // Initial load without any filter
                filterAndSetData("");
            });
        </script>
    </head>
    <body>
        <%- include('./common/header.ejs') %>

        <div class="container-fluid text-center">
            <div class="row justify-content-end mx-5 my-2">
                <div class="col-md-2 mb-3">
                    <label for="testTypeFilter" class="form-label"
                        >Filter by Test Type:</label
                    >
                    <select id="testTypeFilter" class="form-select">
                        <option value="">All</option>
                        <option value="G">G Type</option>
                        <option value="G2">G2 Type</option>
                    </select>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-10 my-4" id="parent_of_form">
                    <div class="card">
                        <div class="card-header">List of Appointments</div>
                        <div class="card-body">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Driver name</th>
                                        <th scope="col">Age</th>
                                        <th scope="col">Test type</th>
                                        <th scope="col">Pass/Fail</th>
                                    </tr>
                                </thead>
                                <tbody id="examinerTableBody"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <footer class="container-fluid text-center">
            <p>Update soon</p>
        </footer>
        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <script>
            function filterAndSetData(testType) {
                // Fetch appointments data and show all slots
                fetch(`http://localhost:3000/api/users-with-appointments`, {
                    method: "GET",
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data?.error) {
                            alert(JSON.stringify(data?.error));
                        } else {
                            const filteredData =
                                testType
                                    ? data.filter(
                                          (user) => user.test_type === testType
                                      )
                                    : data;

                            // lets populate the table
                            const tableBody =
                                document.getElementById("examinerTableBody");
                                tableBody.innerHTML = "";

                            filteredData.forEach((user, index) => {
                                const row = document.createElement("tr");

                                // Add columns to the row
                                const columns = [
                                    index + 1, // Index starting from 1
                                    `${user.first_name} ${user.last_name}`,
                                    user.age,
                                    user.test_type,
                                    user?.isPass == true
                                        ? "Pass"
                                        : user?.isPass == false
                                        ? "Fail"
                                        : "Result Pending",
                                ];

                                columns.forEach((column) => {
                                    const cell = document.createElement("td");
                                    cell.textContent = column;
                                    row.appendChild(cell);
                                });

                                // Add a column with the expandable arrow
                                const arrowCell = document.createElement("td");
                                arrowCell.className = "toggle-arrow";
                                arrowCell.setAttribute(
                                    "data-toggle",
                                    "collapse"
                                );
                                arrowCell.setAttribute(
                                    "data-target",
                                    `.details${index + 1}`
                                );
                                arrowCell.innerHTML = "&#x25B6;";
                                row.appendChild(arrowCell);

                                tableBody.appendChild(row);

                                // Add details row (expanded row)
                                const detailsRow = document.createElement("tr");
                                detailsRow.className = `collapse details${
                                    index + 1
                                }`;
                                detailsRow.innerHTML = `
                                    <td colspan="6">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th scope="col">User name</th>
                                                    <th scope="col">Car Make</th>
                                                    <th scope="col">Car Model</th>
                                                    <th scope="col">Car Year</th>
                                                    <th scope="col">Car Plate No.</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>${
                                                        user.username || ""
                                                    }</td>
                                                    <td>${
                                                        user.car_details.make ||
                                                        ""
                                                    }</td>
                                                    <td>${
                                                        user.car_details
                                                            .model || ""
                                                    }</td>
                                                    <td>${
                                                        user.car_details.year ||
                                                        ""
                                                    }</td>
                                                    <td>${
                                                        user.car_details
                                                            .plat_no || ""
                                                    }</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <!-- Sub-table for Comments and Pass -->
                                        <form onsubmit="handleSubmit(event, '${
                                            user._id
                                        }')">
                                        <table class="table table-bordered mt-3">
                                            <thead>
                                                <tr>
                                                    <th>Comments</th>
                                                    <th>Pass/Fail</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <div class="form-group">
                                                            <textarea class="form-control required" required id="comments-${
                                                                user._id
                                                            }" rows="5" placeholder="Comments">${
                                    user.comments || ""
                                }</textarea>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="form-check">
                                                                <input type="radio" class="form-check-input" id="isPass-${
                                                                    user._id
                                                                }" name="passFail-${
                                    user._id
                                }" ${user.isPass ? "checked" : ""} required>
                                                                <label class="form-check-label" for="isPass-${
                                                                    user._id
                                                                }">Pass</label>
                                                            </div>
                                                            <div class="form-check">
                                                                <input type="radio" class="form-check-input" id="isFail-${
                                                                    user._id
                                                                }" name="passFail-${
                                    user._id
                                }" ${!user.isPass ? "checked" : ""} required>
                                                                <label class="form-check-label" for="isFail-${
                                                                    user._id
                                                                }">Fail</label>
                                                            </div>
                                                            <!-- Hidden input for validation -->
                                                            <input type="hidden" name="passFailValidation" id="passFailValidation-${
                                                                user._id
                                                            }" required>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <button type="button" class="btn btn-primary mt-2 float-right" onclick="handleSubmit(event, '${
                                            user._id
                                        }')">Submit</button>
                                    </form>
                                    </td>
                                `;
                                tableBody.appendChild(detailsRow);
                            });
                        }
                    })
                    .catch((error) => {
                        console.error(error);
                    });
            }
            // Function to handle form submission
            function handleSubmit(event, userId) {
                const comments = document.getElementById(
                    `comments-${userId}`
                ).value;
                const isPass = document.getElementById(
                    `isPass-${userId}`
                ).checked;
                const isFail = document.getElementById(
                    `isFail-${userId}`
                ).checked;
                if (comments == "") {
                    alert("Enter Comments in Comments Section");
                    return;
                }
                if (
                    (isPass == false && isFail == false) ||
                    (isPass == true && isFail == true)
                ) {
                    alert("Pass/Fail section is mandatory");
                    return;
                }
                const formData = {
                    comments: comments,
                    pass: isPass,
                    fail: isFail,
                };

                fetch(`http://localhost:3000/api/update/users/${userId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(formData),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data?.error) {
                            alert(data?.error);
                        } else {
                            alert("Driver Data Updated Successfully.");
                            window.location.reload();
                        }
                    })
                    .catch((error) => {
                        console.error(error);
                        alert(error + "Error.");
                    });
            }
        </script>
    </body>
</html>
